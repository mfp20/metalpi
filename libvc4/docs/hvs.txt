https://www.raspberrypi.org/forums/viewtopic.php?p=1677250#p1677250

> You can load vc4-fkms-v3d or vc4-kms-v3d on any Pi to give you the DRM/KMS interface for rendering. vc4-fkms-v3d is the default on Pi4.
> The 3D performance on a Pi0 or 1 is going to be fairly poor as all the setup has to be done by the fairly weak ARM core, so isn't really recommended.

> Only vc4-kms-v3d is Linux driving the hardware directly, the others are using the firmware.
> vc4-kms-v3d is still a work in progress for the Pi4 as the hardware has significant changes over the previous generations of Pi.


https://www.raspberrypi.org/forums/viewtopic.php?p=1757953#p1757953
> I am not aware of any mechanism to get 10bit YUV via the DPI peripheral, and certainly not in 2017 when the original post was made. 10bit output only gets routed through the HDMI blocks on Pi4.
> The HVS can output YUV4:4:4 by using the OLED colour conversion block that is in the output block of each channel. It's not possible to directly output YUV4:2:0 or 4:2:2, although the HDMI blocks can downconvert to 4:2:2.


https://www.raspberrypi.org/forums/viewtopic.php?p=1781249#p1781249
>> can the HVS/DPI peripherals handle colorspace conversion, and emit YPbPr over the 24 bits of the DPI port?
> In theory it can produce YUV 444, but I've never looked into the detail.
> For HDMI output as YUV there is a conversion available in the HDMI block (including chroma subsample to 422), and that is the approach we're likely to take.

https://www.raspberrypi.org/forums/viewtopic.php?p=1808040#p1808040
> The OLED colour matrix block has changed with Pi4/HVS5, so the existing code doesn't work. Whereas previously there was one CTM that could be assigned to an HVS channel, there is now an OLED CTM per HVS channel. That means a moderate amount of fiddling within the KMS driver.

it deals with color space conversion
